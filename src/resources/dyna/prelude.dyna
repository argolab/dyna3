% :- export key/1.

% :- dispose key(quote1).
% :- make_system_term key/1.
% key(QuotedName) = $reflect(QuotedName, Dynabase, Name, _),
%                   $get_key_for_expression(Dynabase, Name, QuotedName).


:- export list/1.

% for annotation that somethign is a list.  This will match against all list types
list_rec([]).
list_rec([_|A]) :- list_rec(A).

% the "builtin" prelude is not allowed to be recursive, so this has to reference another function which is allowed to be recursive
% if the make_system_term is recursive, then it will cause the startup processes to crash
list(A) :- list_rec(A).
:- make_system_term list/1.  % set this after it is defined, as we can maybe want to enforce some error for this

:- export list/2.
:- dispose list(quote1, eval).  % this is going to quote the type argument, but if we make quoting something that is already hapening, then could this have some issue?

% % allows for type annotation against something.  This

list_rec(Type, []).
list_rec(Type, [X|A]) :- Type(X), list_rec(Type, A).
list(Type, L) :- list_rec(Type, L).
:- make_system_term list/2.

:- export list_length/1.
:- export list_length/2.
list_length_rec([], 0).
list_length_rec([_|X], R+1) :- list_length_rec(X, R).

list_length(X) = list_length_rec(X, R), R.
list_length(X, R) :- list_length_rec(X, R).
:- make_system_term list_length/1.
:- make_system_term list_length/2.


:- export random/3.
:- export random/1.
:- export random/0.
random(Key, Lower, Upper) = (builtin_random_int32(Key) + 2147483648) / 4294967296.0 * (Upper - Lower) + Lower.
random(Key) = random(Key, 0, 1).

:- macro random/0.
random = `(random(*)).

:- make_system_term random/0.
:- make_system_term random/1.
:- make_system_term random/3.

$null = &$null.
:- make_system_term $null/0.


% this is the ?(foo(X)) operator right now.  But there is no support for that in the parser atm
% not sure if `?` should be given such a privileged position.  Also using `?` as the end of a query
:- macro is_defined/1.
is_defined(X) = `((|= false ; true for _ is `X)).

:- make_system_term is_defined/1.