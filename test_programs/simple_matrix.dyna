
multiply(A,B) = matrix {
    elem(X,Y) += A.elem(X,Z) * B.elem(Z,Y).
}.

add(A, B) = matrix {
    elem(X,Y) += A.elem(X,Y) ; B.elem(X,Y).
}.

transpose(A) = matrix {
    elem(X,Y) = A.elem(Y,X).
}.


matrix(M) = {
    elem(X,Y) = M.elem(X,Y).
    transpose = transpose($self).
    transpose2 = matrix { elem(X,Y) = Owner.elem(Y,X). } for Owner=$self.
    add(Other) = add($self, Other).
    multiply(Other) = multiply($self,Other).

    rows max= 0.
    cols max= 0.
    rows max= X+1 for _ is $self.elem(X,_).
    cols max= Y+1 for _ is $self.elem(_,Y).

    row(X) :- _ = $self.elem(X, _).
    rows2 += 0.
    rows2 += 1 for $self.row(X).
}.

zero_matrix(A,B) = matrix {
    elem(X: range(0, A), Y: range(0,B)) = 0.

    %elem(X, Y) = 0 for range(0, A, X), range(0, B, Y).
}.

identity_matrix = matrix {
    elem(X,X) += 1.
}.

print "running matrix test".

a = matrix {
  elem(0,0) = 1.
  elem(0,1) = 2.
  elem(1,1) = 1.
  elem(1,0) = 0.
}.

print "part 1".

assert a.elem(0,0) = 1.
assert a.transpose.elem(1,0) = 2.
assert a.transpose2.elem(1,0) = 2.

print "part 2".

assert a.rows = 2.
assert a.rows2 = 2.

print "part 3".

b = a.multiply(a.transpose).
c = a.add(a).

print "part 4".

assert b.elem(0,0) = 5.

print "part 5".

assert c.elem(0,1) = 4.

print "done".